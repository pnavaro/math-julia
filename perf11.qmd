---
title: "Fuse vectorized operations"
---


```{julia}
f(x) = 3x.^2 + 4x + 7x.^3;

fdot(x) = @. 3x^2 + 4x + 7x^3; # = 3 .* x.^2 .+ 4 .* x .+ 7 .* x.^3

```

```{julia}

Both `f` and `fdot` compute the same thing. 

```{julia}
x = rand(10^6);
f(x) # warmup
@time f(x);
```

```{julia}
fdot(x) # warmup
@time fdot(x);
```

```{julia}
f.(x) # warmup
@time f.(x);
```

:::: {style="font-size: 0.5em" }
`fdot(x)` is faster and allocates less memory, because each `*` and `+`
operation in `f(x)` allocates a new temporary array and executes in
a separate loop.
::::
