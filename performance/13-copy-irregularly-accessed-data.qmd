---
title: "Copy irregularly-accessed data into a contiguous array before operating on it"
---

```{julia}
using Random

x = randn(1_000_000);

inds = shuffle(1:1_000_000)[1:800000];

A = randn(50, 1_000_000);

xtmp = zeros(800_000);

Atmp = zeros(50, 800_000);

@time sum(view(A, :, inds) * view(x, inds))
@time sum(view(A, :, inds) * view(x, inds))
```

::: {style="font-size: 0.5em" }
Irregular access patterns and non-contiguous views can drastically
slow down computations on arrays because of non-sequential memory
access. Copying the views into plain arrays speeds up the multiplication
even with the cost of the copying operation.
:::

---

```{julia}
@time begin
    copyto!(xtmp, view(x, inds))
    copyto!(Atmp, view(A, :, inds))
    sum(Atmp * xtmp)
end
```

```{julia}
@time begin
    copyto!(xtmp, view(x, inds))
    copyto!(Atmp, view(A, :, inds))
    sum(Atmp * xtmp)
end
```
