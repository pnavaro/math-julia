---
format: 
   html:
      toc: false
---

 01. [Performance critical code should be inside a function](01-critical-code-inside-function.qmd)
 02. [Avoid untyped global variables](02-avoid-untyped-global-variable.qmd)
 03. [Pay attention to memory allocation](03-pay-attention-to-memory-allocation.qmd)
 04. [Avoid containers with abstract type parameters](04-avoid-containers-with-abstract-type.qmd)
 05. [Avoid struct fields with abstract type](05-avoid-struct-fields-with-abstract-type.qmd)
 06. [Break functions into multiple definitions](06-break-functions-into-multiple-definitions.qmd)
 07. [Write "type-stable" functions](07-write-type-stable-functions.qmd)
 08. [Avoid changing the type of a variable](08-avoid-changing-the-type-of-a-variable.qmd)
 09. [Access arrays in memory order, along columns](09-access-arrays-in-memory-order.qmd)
 10. [Pre-allocating outputs](10-preallocating-outputs.qmd)
 11. [Fuse vectorized operations](11-fused-vectorized-operations.qmd)
 12. [Consider using views for slices](12-consider-using-views-for-slices.qmd)
 13. [Copy irregularly-accessed data into a contiguous array before operating on it](13-copy-irregularly-accessed-data.qmd)
 14. [Consider StaticArrays.jl for small fixed-size vector/matrix operations](14-consider-static-arrays.qmd)
 15. [Avoid string interpolation for I/O](15-avoid-string-interpolation-for-io.qmd)
 16. [Performance Annotations: @fastmath @inbounds @simd](16-performance-annotations.qmd)


## References

- Julia Docs <https://docs.julialang.org/en/v1/manual/performance-tips/>
- Benoît Fabrèges <https://plmlab.math.cnrs.fr/fabreges/julia-2019/>
- Nassar Huda <https://github.com/nassarhuda/JuliaTutorials>
- Tom Kwong <https://github.com/PacktPublishing/Hands-on-Design-Patterns-and-Best-Practices-with-Julia/>
